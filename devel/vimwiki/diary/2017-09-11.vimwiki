# The first 140 hours of 7 iterations

I have to admit that I have only spent about 50 hours of actual coding on this project while the rest of my time has been doing research and retooling my development environment. For instance, it took me only 45 minutes to code the class structure but I spent 5 hours reading up on the intricacies of javascript modules and "class" structures so that I understood every line of code and it's placement thereof. I've spent a significant amount of time setting up the tools that I want to use while programming in this and future projects -like this diary/vimwiki, vim macros for interacting with timetrap and the like.

It's also been quite a challenge to be working on an interface for keeping track of time while trying to keep track of time. Timetrap is inspiring to me because of it's elegance: it is simple but not simplistic, it just works, and it contributes the solution of a very complex problem -tracking time in a significant way. My interest in time tracking goes back a long way and I won't get into all of that here. Suffice to say, I've come to realize over the years that if tracking time is not convenient then people won't do it -myself included. The reason I chose timetrap is because I can start work in a directory where I've added an autosheet and quickly start a project timer -'no muss no fuss'. And, because I'm lazy, I've decided to find a way to make tracking time a bit easier on myself and hopefully others. I can't tell you how many times it's come up in meetings in my career where someone in authority asks something of someone in my team or myself like "how long did 'X' take to develop anyway?" A large part of why I seek efficient ways to do things is because of this line of questioning. My hope is that a UI will help me, as well as others, leverage an elegant program like timetrap even more efficiently.

The seven iterations so far represent my understanding of the language over these 140 hours (3 weeks). The vision has been fairly consistent though so far: present a user interface that automates and otherwise improves upon the elegancy of timetrap. Once that is accomplished I hope to integrate the project into my gollum / vimwiki project. Slowly I'm working on building the ideal development environment for me as a goal. Mainly I want to leverage current tools in their current form in a way that provides the best experience possible.
